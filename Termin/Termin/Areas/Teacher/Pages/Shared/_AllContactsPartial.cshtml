@model List<Termin.Areas.Teacher.Models.QuestionIndexModel>
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@* ViewLocalizer path is Resources.Pages.Index *@
@inject IViewLocalizer ViewLocalizer

<div id="modal-placeholder2"></div>

<p>@ViewLocalizer["All Questions for the test"]</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <button type="button" class="btn btn-link" id="links" data-id="@item.Id" data-url="@Url.Page("Questions","QuestionModalEdit")" data-toggle="ajax-modal">
                        @ViewLocalizer["Details"]
                    </button>
                    <a asp-page="./Questions" asp-page-handler="DeleteQuestion" asp-route-id="@item.Id">@ViewLocalizer["Delete"]</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>

    var placeholderElement = $('#modal-placeholder2');
    $('.btn-link').click(function (event) {
        event.preventDefault();
        console.log('YEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE');
        var url = $(this).data('url') + '&id=' + $(this).data('id');
        console.log(url);
        $.get(url).done(function (data) {
            placeholderElement.html(data);
            placeholderElement.find('.modal').modal('show');
        });
    });

    //function RefreshContact() {
    //    console.log('************')
    //    var contactPlaceholder = $('#allContacts-placeholder');
    //    contactPlaceholder.empty();
    //    console.log(window.location.href);
    //    var url = window.location.href + '&handler=AllContacts';
    //    console.log(window.location.href);
    //    console.log(contactPlaceholder);
    //    $.get(url).done(function (data) {
    //        console.log(data);
    //        contactPlaceholder.html(data);
    //    })
    //};

    placeholderElement.on('click', '[data-save="modal"]', function (event) {
        event.preventDefault();

        var form = $(this).parents('.modal').find('form');
        var actionUrl = form.attr('action');
        var dataToSend = form.serialize();

        $.post(actionUrl, dataToSend).done(function (data) {
            var newBody = $('.modal-body', data);
            // replace modal contents with new form
            placeholderElement.find('.modal-body').replaceWith(newBody);

            var isValid = newBody.find('[name="IsValid"]').val() == 'True';
            if (isValid) {
                placeholderElement.find('.modal').modal('hide');


                //var contactPlaceholder = $('#allContacts-placeholder');
                //console.log(contactPlaceholder);
                //var url = window.location.href;
                //console.log(url);
                //$.get(url).done(function (data) {
                //    contactPlaceholder.empty();
                //    contactPlaceholder.html(data);
                //    console.log(data);
                //    console.log('****');
                //    var placeholderElement = $('#modal-placeholder');
                //    console.log(placeholderElement);
                //    placeholderElement.find('.modal').modal('hide');

                //});
            }
        });

    });

</script>
