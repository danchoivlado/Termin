@using Termin.Models
@model List<TestModel>
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@* ViewLocalizer path is Resources.Pages.Index *@
@inject IViewLocalizer ViewLocalizer
<table class="table">
    <thead>
        <tr>
            <th>
                @ViewLocalizer["Name"]
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @if (item.Active)
                    {
                        <a asp-page="./TakeTest" asp-route-id="@item.Id">@ViewLocalizer["Take test"]</a>
                    }
                    else
                    {
                        <button class="btn btn-sm btn-dark details" data-id="@item.Id" data-toggle="modal" data-target="#details-modal">@ViewLocalizer["Details"]</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" tabindex="-1" role="dialog" id="details-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Product Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body"></div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('button.details').on('click', function () {
            console.log("Jordan");
            $('.modal-body').load(`/Tests?handler=Results&id=${$(this).data('id')}`);
        });
    })
</script>
